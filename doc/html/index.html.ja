<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
  <head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" href="test-unit.css" type="text/css" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="icon" href="/favicon.png" />
    <title>test-unit - Ruby用単体テストフレームワーク</title>
  </head>
  <body>
    <div class="header">
      <div class="title">
        <a href="index.html.ja">
	  <span class="title">Ruby用単体テストフレームワーク</span>
	  <span class="title-separator">-</span>
	  <span class="title-project">test-unit</span>
        </a>
      </div>
      <ul class="other-languages">
        <li id="other-language-english" lang="en" xml:lang="en"><a href="./">English</a></li>
      </ul>
      <ul class="menu">
	<li id="menu-reference"><a href="test-unit/ja/">リファレンスマニュアル</a></li>
	<li id="menu-install"><a href="#test-unit-install">インストール</a></li>
	<li id="menu-developer"><a href="#developer">開発者向け情報</a></li>
      </ul>
    </div>

    <div class="content">
      <div class="main">
	<h1>test-unit</h1>
	<p>
	  test-unitはRuby用のxUnit系の単体テストフレームワークです。Ruby 1.8まではRuby本体に標準添付されていましたが、Ruby 1.9からはより小さな<a href="http://blog.zenspider.com/minitest/">minitest</a>というフレームワークが標準添付されています。test-unitがRuby 1.8に標準添付されていた頃はほとんど機能拡張などがされず、<a href="http://rspec.info/">RSpec</a>などより新しいテスティングフレームワークから見劣りするものになっていました。しかし、Ruby標準添付ではなく、1つのプロジェクトとして開発が進められるようになってからは活発に開発が進められています。Ruby本体のバージョンアップに関係なく新しいバージョンをリリースできるようになったことも開発が活発になった理由の1つです。Ruby標準添付の頃のtest-unitしか知らない人は、一度、最新のtest-unitを使ってみてはいかがでしょうか。とても使いやすくなっていることを実感できるはずです。
	</p>
        <h2 id="backward-compatibility">後方互換性</h2>
        <p>
          test-unitではなるべく後方互換性を維持したまま開発を進めているため、ほとんどの場合、Ruby 1.8に標準添付されていたtest-unitで動いたテストは最新のtest-unitでも動作します。しかし、100%ではありません。もし、完全にRuby 1.8に標準添付されていたバージョンを使用したい場合は、以下のようにtest-unit 1.2.3をインストールし、明示的にtest-unit 1.2.3を利用するようにしてください。
        </p>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit -v 1.2.3</pre>
        </p>
        <p>
          使用法:
          <pre class="code">require "rubygems"
gem "test-unit", "1.2.3"
require "test/unit"</pre>
        </p>
        <p>
          <a href="classic/test-unit/">test-unit 1.2.3のリファレンスマニュアル</a>
        </p>

	<h2 id="feature-split">機能の分割</h2>
        <p>
	  test-unitには外部ライブラリに依存している機能がいくつかあります。たとえば、テスト結果をGUIで表示する部分です。これらの部分は別のパッケージとしてリリースすることにし、標準的なコア機能はtest-unitパッケージとしてリリースしています。そのため、付加的な機能を利用する場合は明示的にtest-unitとは異なるパッケージをインストールする必要があります。
        </p>
        <p>
          例えば、GTK+を用いたテスト実行インターフェイスを利用する場合は以下のようになります。
        </p>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-runner-gtk2</pre>
        </p>
        <p>
          使用法:
          <pre class="code">require "test/unit/runner/gtk2"</pre>
        </p>
        <p>
	  これにより--runner=gtk2オプションが利用できるようになります。--runner=gtk2オプションを指定することによりGTK+を用いたテスト実行インターフェイスを利用できるようになります。
	</p>
        <p>
	  test-unit関連パッケージは以下の通りです。
	</p>
	<ul>
          <li><a href="#test-unit">test-unit</a>: テスティングフレームワークのコア機能を提供するライブラリ</li>
          <li><a href="#test-unit-full">test-unit-full</a>: test-unit関連ライブラリをまとめてインストールするためのメタパッケージ</li>
          <li><a href="#test-unit-notify">test-unit-notify</a>: テスト結果を通知するライブラリ</li>
          <li><a href="#test-unit-rr">test-unit-rr</a>: テストダブルを利用するためのライブラリ</li>
          <li><a href="#test-unit-capybara">test-unit-capybara</a>: Rackアプリケーションの統合テストを簡単に行うためのライブラリ</li>
          <li><a href="#test-unit-runner-gtk2">test-unit-runner-gtk2</a>: GTK+を用いたGUIでテストを実行するためのライブラリ</li>
          <li><a href="#test-unit-runner-tk">test-unit-runner-tk</a>: Tkを用いたGUIでテストを実行するためのライブラリ</li>
          <li><a href="#test-unit-runner-fox">test-unit-runner-fox</a>: FOX Toolkitを用いたGUIでテストを実行するためのライブラリ</li>
	</ul>

	<h2 id="test-unit">test-unit</h2>
        <p>
          xUnitベースのテスティングフレームワークのコア機能を提供します。Ruby 1.8に標準添付されていた頃と比べると以下のような機能が追加されています。
          <ul>
            <li>テストが失敗したときに期待値と実測値のdiffを表示して違いをわかりやすく表示する機能</li>
            <li>テストの実行結果を色付けして見やすく表示する機能</li>
            <li>環境依存のテストなど、必要のないテストを動的に判断して省略する機能</li>
            <li>複数のsetupとteardownを設定する機能</li>
            <li>テスト毎ではなく、テストケース毎にテスト環境準備・後始末処理を呼び出す機能</li>
            <li>テストに属性を設定する機能</li>
            <li>テストの実行時間が長くなり、テストを実行する気がなくなってしまうことを防ぐために、うまい具合に実行するテスト数を間引いてテストの実行時間を削減する機能</li>
            <li>...</li>
          </ul>
        </p>
	<h3 id="test-unit-latest">test-unitの最新リリース</h3>
	<p>
	  2011-11-09にリリースされた<a href="test-unit/ja/file.news.html">2.4.1</a>が最新リリースです。
        </p>
	<h3 id="test-unit-install">test-unitのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit</pre>
        </p>
        <p>
          使い方:
          <pre class="code">gem "test-unit"
require "test/unit"</pre>
        </p>
	<h3 id="test-unit-document">test-unitのドキュメント</h3>
        <ul>
          <li><a href="test-unit/ja/">リファレンスマニュアル</a></li>
        </ul>

	<h2 id="test-unit-full">test-unit-full</h2>
        <p>
          以下の拡張パッケージをまとめてインストールするためのメタパッケージです。
        </p>
	<h3 id="test-unit-full-latest">test-unit-fullの最新リリース</h3>
	<p>
	  2011-02-09にリリースされた0.0.3が最新リリースです。
        </p>
	<h3 id="test-unit-full-install">test-unit-fullのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-full</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/full"</pre>
        </p>

	<h2 id="test-unit-notify">test-unit-notify</h2>
        <p>
          <div class="eye-catch">
	    <img alt="GNOME上での通知"
		 src="test-unit-notify/screenshot/notify-on-gnome.png" />
	    <img alt="Mac OS X上での通知"
		 src="test-unit-notify/screenshot/notify-on-mac-os-x.png" />
          </div>
          テストの実行結果をポップアップで通知します。通知方法は環境によって異なります。
          <dl class="feature-list">
            <dt>GNOMEやXfceやKDEなどのX Window Systemベースの環境</dt>
            <dd>notify-sendを使ってD-Bus経由でnotification-daemonにリクエストを送ることにより通知します。notify-sendコマンドが無かったり、notification-daemonが動いていない場合は利用できません。</dd>
            <dt>Mac OS X</dt>
            <dd>growlnotifyを使って通知します。growlnotifyコマンドが無かったり、Growlが動いていない場合は利用できません。</dd>
            <dt>Windows</dt>
            <dd>どうやるのがいいのでしょうか。Growl for Windows？（未実装）</dd>
          </dl>
        </p>
	<h3 id="test-unit-notify-latest">test-unit-notifyの最新リリース</h3>
	<p>
	  2011-04-15にリリースされた0.3.0が最新リリースです。
        </p>
	<h3 id="test-unit-notify-install">test-unit-notifyのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-notify</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/notify"</pre>
        </p>
        <p>
          --notifyオプションが追加されます。--notifyオプションを指定するとテスト終了時にテスト結果をポップアップで通知します。
        </p>
	<h3 id="test-unit-notify-document">test-unit-notifyのドキュメント</h3>
        <ul>
          <li><a href="test-unit-notify/">リファレンスマニュアル</a></li>
        </ul>

	<h2 id="test-unit-rr">test-unit-rr</h2>
        <p>
          test-unit 2で<a href="http://capsctrl.que.jp/kdmsnr/wiki/bliki/?TestDouble">テストダブル（テスト代役）</a>ライブラリ<a href="https://github.com/btakita/rr">RR</a>を利用するためのパッケージです。
        </p>
	<h3 id="test-unit-rr-latest">test-unit-rrの最新リリース</h3>
	<p>
	  2011-02-10にリリースされた1.0.1が最新リリースです。
        </p>
	<h3 id="test-unit-rr-install">test-unit-rrのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-rr</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/rr"</pre>
        </p>
	<h3 id="test-unit-rr-document">test-unit-rrのドキュメント</h3>
        <ul>
          <li><a href="test-unit-rr/">リファレンスマニュアル</a></li>
        </ul>

	<h2 id="test-unit-capybara">test-unit-capybara</h2>
        <p>
          Rackアプリケーションの統合テストを簡単に行うためのライブラリである<a href="https://github.com/jnicklas/capybara">Capybara</a>をtest-unit 2で利用するためのパッケージです。
        </p>
	<h3 id="test-unit-capybara-latest">test-unit-capybaraの最新リリース</h3>
	<p>
	  2011-05-01にリリースされた1.0.0が最新リリースです。
        </p>
	<h3 id="test-unit-capybara-install">test-unit-capybaraのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-capybara</pre>
        </p>
        <p>
          使い方:
          <pre class="code"><code>require "test/unit/capybara"

class TestMyRackApplication &lt; Test::Unit::TestCase
  include Capybara

  def setup
    Capybara.app = MyRackApplication.new
  end

  def test_top_page
    visit("/")
    assert_equal("Welcome!", find("title").text)
  end
end</code></pre>
        </p>
	<h3 id="test-unit-capybara-document">test-unit-capybaraのドキュメント</h3>
        <ul>
          <li><a href="test-unit-capybara/">リファレンスマニュアル</a></li>
        </ul>

	<h2 id="test-unit-runner-gtk2">test-unit-runner-gtk2</h2>
        <p>
          GTK+を用いて実装されたGUIのテスト実行機能です。
        </p>
	<h3 id="test-unit-runner-gtk2-latest">test-unit-runner-gtk2の最新リリース</h3>
	<p>
	  2011-02-09にリリースされた0.0.2が最新リリースです。
        </p>
	<h3 id="test-unit-runner-gtk2-install">test-unit-runner-gtk2のインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-runner-gtk2</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/runner/gtk2"</pre>
        </p>
        <p>
          --runner=gtk2オプションが追加されます。--runner=gtk2オプションを指定するとGTK+ベースのUIでテストを実行します。
        </p>


	<h2 id="test-unit-runner-tk">test-unit-runner-tk</h2>
        <p>
          Tkを用いて実装されたGUIのテスト実行機能です。
        </p>
	<h3 id="test-unit-runner-tk-latest">test-unit-runner-tkの最新リリース</h3>
	<p>
	  2008-06-17にリリースされた0.0.1が最新リリースです。
        </p>
	<h3 id="test-unit-runner-tk-install">test-unit-runner-tkのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-runner-tk</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/runner/tk"</pre>
        </p>
        <p>
          --runner=tkオプションが追加されます。--runner=tkオプションを指定するとTkベースのUIでテストを実行します。
        </p>

	<h2 id="test-unit-runner-fox">test-unit-runner-fox</h2>
        <p>
          FOX Toolkitを用いて実装されたGUIのテスト実行機能です。
        </p>
	<h3 id="test-unit-runner-fox-latest">test-unit-runner-foxの最新リリース</h3>
	<p>
	  2008-06-17にリリースされた0.0.1が最新リリースです。
        </p>
	<h3 id="test-unit-runner-fox-install">test-unit-runner-foxのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-runner-fox</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/runner/fox"</pre>
        </p>
        <p>
          --runner=foxオプションが追加されます。--runner=foxオプションを指定するとFOX ToolkitベースのUIでテストを実行します。
        </p>

	<h2 id="developer">開発者向け情報</h2>
        <p>
	  test-unitはRubyでもっと便利なテスト環境を提供するため、開発に参加してくれる人を募集しています。
          以下は開発に必要となる情報です。
        </p>

	<h3 id="repository">リポジトリ</h3>
	<p>
	  <a href="https://github.com/test-unit/">GitHub上のgitリポジトリ</a>を利用しています。ソースコードは以下のように取得できます。
        </p>
        <dl>
          <dt><a href="https://github.com/test-unit/test-unit/">test-unit</a></dt>
          <dd><pre class="command">% git clone https://github.com/test-unit/test-unit.git</pre></dd>
          <dt><a href="https://github.com/test-unit/test-unit-full/">test-unit-full</a></dt>
          <dd><pre class="command">% git clone https://github.com/test-unit/test-unit-full.git</pre></dd>
          <dt><a href="https://github.com/test-unit/test-unit-notify/">test-unit-notify</a></dt>
          <dd><pre class="command">% git clone https://github.com/test-unit/test-unit-notify.git</pre></dd>
          <dt><a href="https://github.com/test-unit/test-unit-rr/">test-unit-rr</a></dt>
          <dd><pre class="command">% git clone https://github.com/test-unit/test-unit-rr.git</pre></dd>
          <dt><a href="https://github.com/test-unit/test-unit-capybara/">test-unit-capybara</a></dt>
          <dd><pre class="command">% git clone https://github.com/test-unit/test-unit-capybara.git</pre></dd>
          <dt><a href="https://github.com/test-unit/test-unit-runner-gtk2/">test-unit-runner-gtk2</a></dt>
          <dd><pre class="command">% git clone https://github.com/test-unit/test-unit-runner-gtk2.git</pre></dd>
          <dt><a href="https://github.com/test-unit/test-unit-runner-tk/">test-unit-runner-tk</a></dt>
          <dd><pre class="command">% git clone https://github.com/test-unit/test-unit-runner-tk.git</pre></dd>
          <dt><a href="https://github.com/test-unit/test-unit-runner-fox/">test-unit-runner-fox</a></dt>
          <dd><pre class="command">% git clone https://github.com/test-unit/test-unit-runner-fox.git</pre></dd>
        </dl>
      </div>

      <div class="sidebar">
        <h2>プロジェクトについて</h2>
	<ul>
	  <li><a href="http://rubyforge.org/projects/test-unit/">プロジェクトページ</a></li>
	  <li>
	    <a href="http://rubyforge.org/mailman/listinfo/test-unit-users-ja">メーリングリスト</a>
	  </li>
	</ul>
      </div>
    </div>

    <div class="sponsors">
      <p id="sponsor-rubyforge">
        <a href="http://rubyforge.org/projects/test-unit/">
          <img src="rubyforge.png" width="120" height="24" border="0" alt="ラングバプロジェクトはRubyForge.orgにホスティングしてもらっています。" />
        </a>
      </p>
      <p id="sponsor-github">
        <a href="https://github.com/test-unit/">
          <img src="github-logo.png" width="100" height="45" border="0" alt="GitHubの提供するgitリポジトリを利用しています。" />
        </a>
      </p>
      <p id="sponsor-tango">
	<a href="http://tango.freedesktop.org/">
          <img width="120" height="53" border="0" alt="Tango Desktop Projectのアイコンを利用しています。" src="tango-logo.png" />
        </a>
      </p>
      <p id="sponsor-famfamfam">
	<a href="http://www.famfamfam.com/">
          <img width="120" height="18" border="0" alt="famfamfam.comの国旗を利用しています。" src="famfamfam-logo.png" />
        </a>
      </p>
    </div>
  </body>
</html>
